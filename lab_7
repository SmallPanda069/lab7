#include <stdio.h>

void swap(int *xp, int *yp, int *count) {
    int temp = *xp;
    *xp = *yp;
    *yp = temp;
    if (count != NULL) {
        (*count)++;
    }
}

void bubbleSort(int arr[], int n, int swapCount[]) {
    int i, j;
    for (i = 0; i < n-1; i++) {
        for (j = 0; j < n-i-1; j++) {
            if (arr[j] > arr[j+1]) {
                swap(&arr[j], &arr[j+1], &swapCount[arr[j+1]]);
            }
        }
    }
}

void selectionSort(int arr[], int n, int swapCount[], int* totalSwaps) {
    int i, j, u, temp;
    
    // Initialize swap counts for all elements to 0
    for (i = 0; i < n; i++) {
        swapCount[arr[i]] = 0;
    }
    *totalSwaps = 0;

    // Selection sort algorithm with swap counting
    for (i = 0; i < n-1; i++) {
        u = i;
        for (j = i+1; j < n; j++) {
            if (arr[j] < arr[u]) {
                u = j;
            }
        }
        if (u != i) {
            temp = arr[u];
            arr[u] = arr[i];
            arr[i] = temp;
            swapCount[arr[i]]++; // Increment swap count for the element
            (*totalSwaps)++; // Increment total number of swaps
        }
    }
}


void printSwapCounts(int arr[], int n, int swapCount[]) {
    int totalSwaps = 0;
    for (int i = 0; i < n; i++) {
        printf("%d: %d\n", arr[i], swapCount[arr[i]]);
        totalSwaps += swapCount[arr[i]];
    }
    printf("Total # of swaps: %d\n\n", totalSwaps);
}


int main() {
    int array1[] = {97, 16, 45, 63, 13, 22, 7, 58, 72};
    int array2[] = {90, 80, 70, 60, 50, 40, 30, 20, 10};
    int n1 = sizeof(array1)/sizeof(array1[0]);
    int n2 = sizeof(array2)/sizeof(array2[0]);
    int swapCount1[100] = {0}; 
    int swapCount2[100] = {0}; 
    int totalSwaps1, totalSwaps2, i;
       
       bubbleSort(array1, n1, swapCount1);
    printf("array1 bubble sort:\n");
    printSwapCounts(array1, n1, swapCount1);

    bubbleSort(array2, n2, swapCount2);
    printf("array2 bubble sort:\n");
    printSwapCounts(array2, n2, swapCount2);
    // Perform selection sort on both arrays
    selectionSort(array1, n1, swapCount1, &totalSwaps1);
    selectionSort(array2, n2, swapCount2, &totalSwaps2);

    // Print the swap count for each element in array1
    printf("array1 selection sort:\n");
    for (i = 0; i < n1; i++) {
        printf("%d: %d\n", array1[i], swapCount1[array1[i]]);
    }
    printf("%d\n", totalSwaps1); // Print the total number of swaps for array1

    // Print the swap count for each element in array2
    printf("array2 selection sort:\n");
    for (i = 0; i < n2; i++) {
        printf("%d: %d\n", array2[i], swapCount2[array2[i]]);
    }
    printf("%d\n", totalSwaps2); // Print the total number of swaps for array2

    return 0;
}
